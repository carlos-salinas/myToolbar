package com.thingtrack.myToolbar;

import java.io.Serializable;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.terminal.ThemeResource;
import com.vaadin.terminal.gwt.client.MouseEventDetails;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Component;
import com.vaadin.ui.CssLayout;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
public class SimplifiedNavigationToolbar extends CssLayout {
	
	@AutoGenerated
	private Button btnRefreshRegister;

	@AutoGenerated
	private Embedded imgSeparator02;

	@AutoGenerated
	private Button btnUpRegister;

	@AutoGenerated
	private Button btnDownRegister;

	@AutoGenerated
	private Embedded imgSeparator01;

	@AutoGenerated
	private Button btnLastRegister;

	@AutoGenerated
	private Button btnNextRegister;

	@AutoGenerated
	private Label lblCountRegister;

	@AutoGenerated
	private Button btnPreviousRegister;

	@AutoGenerated
	private Button btnFirstRegister;

	@AutoGenerated
	private Embedded imgSeparatorGroup;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private Object register;
	
	private int position = 0;
	
	// navigator button listeners
	private ClickFirstButtonListener listenerFirstButton = null;
	private ClickPreviousButtonListener listenerPreviousButton = null;
	private ClickNextButtonListener listenerNextButton = null;
	private ClickLastButtonListener listenerLastButton = null;
	private ClickDownButtonListener listenerDownButton = null;
	private ClickUpButtonListener listenerUpButton = null;
	private ClickRefreshButtonListener listenerRefreshButton = null;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public SimplifiedNavigationToolbar() {
		buildMainLayout();
		
		// TODO add user code here
		btnFirstRegister.setCaption("");
		btnNextRegister.setCaption("");
		btnPreviousRegister.setCaption("");
		btnLastRegister.setCaption("");
		btnRefreshRegister.setCaption("");
		btnDownRegister.setCaption("");
		btnUpRegister.setCaption("");
		
		btnFirstRegister.setDescription("Primer Registro");
		btnNextRegister.setDescription("Siguiente Registro");
		btnPreviousRegister.setDescription("Anterior Registro");
		btnLastRegister.setDescription("Ãšltimo Registro");
		btnRefreshRegister.setDescription("Refrescar Registros");
		btnDownRegister.setDescription("Registros Detalle");
		btnUpRegister.setDescription("Registros Maestro");
	}
	
	@Override
	protected String getCss(Component c) {
		
		return "float: left;";
		
	}
	
	public void setDownButton(boolean visible) {
		this.btnDownRegister.setVisible(visible);
		
	}
	
	public boolean getDownButton() {
		return this.btnDownRegister.isVisible();
		
	}
	
	public void setUpButton(boolean visible) {
		this.btnUpRegister.setVisible(visible);
		
	}
	
	public boolean getUpButton() {
		return this.btnUpRegister.isVisible();
		
	}
	
	public void addListenerFirstButton(ClickFirstButtonListener listener) {
		this.listenerFirstButton = listener;
		
	}
	
	public void addListenerPreviousButton(ClickPreviousButtonListener listener) {
		this.listenerPreviousButton = listener;
		
	}
		
	public void addListenerNextButton(ClickNextButtonListener listener) {
		this.listenerNextButton = listener;
		
	}
	
	public void addListenerLastButton(ClickLastButtonListener listener) {
		this.listenerLastButton = listener;
		
	}

	public void addListenerDownButton(ClickDownButtonListener listener) {
		this.listenerDownButton = listener;
		
	}
	
	public void addListenerUpButton(ClickUpButtonListener listener) {
		this.listenerUpButton = listener;
		
	}
	
	public void addListenerRefreshButton(ClickRefreshButtonListener listener) {
		this.listenerRefreshButton = listener;
		
	}
	
	// navigation listener toolbar
	public interface ClickFirstButtonListener extends Serializable {
        public void firstButtonClick(ClickNavigationEvent event);

    }
	
	public interface ClickPreviousButtonListener extends Serializable {
        public void previousButtonClick(ClickNavigationEvent event);

    }
	
	public interface ClickNextButtonListener extends Serializable {
        public void nextButtonClick(ClickNavigationEvent event);

    }
	
	public interface ClickLastButtonListener extends Serializable {
        public void lastButtonClick(ClickNavigationEvent event);

    }

	public interface ClickDownButtonListener extends Serializable {
        public void downButtonClick(ClickNavigationEvent event);

    }
	
	public interface ClickUpButtonListener extends Serializable {
        public void upButtonClick(ClickNavigationEvent event);

    }
	
	public interface ClickRefreshButtonListener extends Serializable {
        public void refreshButtonClick(ClickNavigationEvent event);

    }
	
	public class ClickNavigationEvent extends ClickEvent {
		private int index;
		private Object register;
		
		public ClickNavigationEvent(Button button, Component source) {
			button.super(source);
			
		}

		public ClickNavigationEvent(Button button, Component source, MouseEventDetails details) {
			button.super(source, details);
			
		}

		public ClickNavigationEvent(Button button, Component source, MouseEventDetails details, Object register, int index) {
			button.super(source, details);
			
			this.index = index;
			this.register = register;
		}

		public int getIndex() {
			return this.index;
			
		}
		
		public Object getRegister() {
			return this.register;
			
		}
		
	  }
	
	@AutoGenerated
	private void buildMainLayout() {
		
		setImmediate(false);
		setWidth("425px");
		setHeight("28px");
		setMargin(true);
		setStyleName("toolbar");
		
		// toolbarLayout
		addComponent(buildToolbarLayout());
	}

	@AutoGenerated
	private HorizontalLayout buildToolbarLayout() {
		// common part: create layout
		HorizontalLayout toolbarLayout = new HorizontalLayout();
		
		// imgSeparatorGroup
		imgSeparatorGroup = new Embedded();
		imgSeparatorGroup.setImmediate(false);
		imgSeparatorGroup.setWidth("-1px");
		imgSeparatorGroup.setHeight("-1px");
		imgSeparatorGroup.setSource(new ThemeResource(
				"../konekti/images/separator_group.png"));
		imgSeparatorGroup.setType(1);
		imgSeparatorGroup.setMimeType("image/png");
		toolbarLayout.addComponent(imgSeparatorGroup);
		
		// btnFirstRegister
		btnFirstRegister = new Button();
		btnFirstRegister.setCaption("Button");
		btnFirstRegister
				.setIcon(new ThemeResource(
						"../konekti/images/icons/navigation-toolbar/arrow-stop-180.png"));
		btnFirstRegister.setImmediate(true);
		btnFirstRegister.setWidth("-1px");
		btnFirstRegister.setHeight("-1px");
		toolbarLayout.addComponent(btnFirstRegister);
		
		// btnPreviousRegister
		btnPreviousRegister = new Button();
		btnPreviousRegister.setCaption("Button");
		btnPreviousRegister.setIcon(new ThemeResource(
				"../konekti/images/icons/navigation-toolbar/arrow-180.png"));
		btnPreviousRegister.setImmediate(true);
		btnPreviousRegister.setWidth("-1px");
		btnPreviousRegister.setHeight("-1px");
		toolbarLayout.addComponent(btnPreviousRegister);
		
		// lblCountRegister
		lblCountRegister = new Label();
		lblCountRegister.setImmediate(false);
		lblCountRegister.setWidth("50px");
		lblCountRegister.setHeight("-1px");
		lblCountRegister.setValue("1/1");
		toolbarLayout.addComponent(lblCountRegister);
		
		// btnNextRegister
		btnNextRegister = new Button();
		btnNextRegister.setCaption("Button");
		btnNextRegister.setIcon(new ThemeResource(
				"../konekti/images/icons/navigation-toolbar/arrow.png"));
		btnNextRegister.setImmediate(true);
		btnNextRegister.setWidth("-1px");
		btnNextRegister.setHeight("-1px");
		toolbarLayout.addComponent(btnNextRegister);
		
		// btnLastRegister
		btnLastRegister = new Button();
		btnLastRegister.setCaption("Button");
		btnLastRegister.setIcon(new ThemeResource(
				"../konekti/images/icons/navigation-toolbar/arrow-stop.png"));
		btnLastRegister.setImmediate(true);
		btnLastRegister.setWidth("-1px");
		btnLastRegister.setHeight("-1px");
		toolbarLayout.addComponent(btnLastRegister);
		
		// imgSeparator01
		imgSeparator01 = new Embedded();
		imgSeparator01.setImmediate(false);
		imgSeparator01.setWidth("-1px");
		imgSeparator01.setHeight("-1px");
		imgSeparator01.setSource(new ThemeResource(
				"../konekti/images/separator.png"));
		imgSeparator01.setType(1);
		imgSeparator01.setMimeType("image/png");
		toolbarLayout.addComponent(imgSeparator01);
		
		// btnDownRegister
		btnDownRegister = new Button();
		btnDownRegister.setCaption("Button");
		btnDownRegister.setIcon(new ThemeResource(
				"../konekti/images/icons/navigation-toolbar/arrow-270.png"));
		btnDownRegister.setImmediate(true);
		btnDownRegister.setWidth("-1px");
		btnDownRegister.setHeight("-1px");
		toolbarLayout.addComponent(btnDownRegister);
		
		// btnUpRegister
		btnUpRegister = new Button();
		btnUpRegister.setCaption("Button");
		btnUpRegister.setIcon(new ThemeResource(
				"../konekti/images/icons/navigation-toolbar/arrow-090.png"));
		btnUpRegister.setImmediate(true);
		btnUpRegister.setWidth("-1px");
		btnUpRegister.setHeight("-1px");
		toolbarLayout.addComponent(btnUpRegister);
		
		// imgSeparator02
		imgSeparator02 = new Embedded();
		imgSeparator02.setImmediate(false);
		imgSeparator02.setWidth("-1px");
		imgSeparator02.setHeight("-1px");
		imgSeparator02.setSource(new ThemeResource(
				"../konekti/images/separator.png"));
		imgSeparator02.setType(1);
		imgSeparator02.setMimeType("image/png");
		toolbarLayout.addComponent(imgSeparator02);
		
		// btnRefreshRegister
		btnRefreshRegister = new Button();
		btnRefreshRegister.setCaption("Button");
		btnRefreshRegister
				.setIcon(new ThemeResource(
						"../konekti/images/icons/navigation-toolbar/arrow-circle-double.png"));
		btnRefreshRegister.setImmediate(true);
		btnRefreshRegister.setWidth("-1px");
		btnRefreshRegister.setHeight("-1px");
		toolbarLayout.addComponent(btnRefreshRegister);
		toolbarLayout.setExpandRatio(btnRefreshRegister, 1.0f);
		
		return toolbarLayout;
	}

}
